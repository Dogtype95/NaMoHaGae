<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kro.namohagae.mall.dao.CartDetailDao">
    <!-- 장바구니 상세 정보 저장 -->
    <insert id="save">
        <selectKey keyProperty="cartDetailNo" order="BEFORE" resultType="int">
            select cart_detail_seq_cart_detail_no.nextval from dual
        </selectKey>
        insert into CART_DETAIL(cart_detail_no,member_no,cart_no,product_no,cart_detail_count,cart_detail_price)
        values(#{cartDetailNo},#{memberNo},#{cartNo},#{productNo},#{cartDetailCount},#{cartDetailPrice})
    </insert>

    <!-- 장바구니 개수 증가 업데이트 -->
    <update id="updateIncrease" parameterType="int">
        update CART_DETAIL set cart_detail_count = cart_detail_count+1 where cart_detail_no = #{cartDetailNo}
    </update>

    <!-- 장바구니 개수 감소 업데이트 -->
    <update id="updateDecrease" parameterType="int">
        update CART_DETAIL set cart_detail_count = cart_detail_count-1 where cart_detail_no = #{cartDetailNo}
    </update>

    <!-- 장바구니 상세 정보 업데이트 -->
    <update id="update" parameterType="CartDetail">
        update CART_DETAIL
        set product_no = #{productNo},cart_detail_count = #{cartDetailCount},cart_detail_price = #{cartDetailPrice}
        where cart_detail_no = #{cartDetailNo} and cart_no = #{cartNo} and member_no = #{memberNo}
    </update>

    <!-- 장바구니 상세 정보 삭제 -->
    <delete id="delete">
        delete from CART_DETAIL where cart_detail_no = #{cartDetailNo} and cart_no = #{cartNo} and member_no = #{memberNo}
    </delete>

    <!-- 장바구니 번호로 장바구니 상세 정보 검색 -->
    <select id="findByCartNoAndMemberNo" resultType="CartDetail">
        select cart_detail_no, member_no, cart_no, product_no, cart_detail_count, cart_detail_price
        from CART_DETAIL where cart_no = #{cartNo} and member_no = #{memberNo}
    </select>

    <!-- 해당 사용자의 장바구니 상품 확인 -->
    <select id="findByMemberNoAndProductNo" resultType="CartDetail">
        select * from CART_DETAIL where member_no=#{memberNo} and product_no=#{productNo} and rownum=1
    </select>

    <!-- 주문 완료 후 장바구니에서 상품 삭제 -->
    <delete id="removeByCartNo">
        delete from CART_DETAIL where product_no in
        <foreach collection="items" item="item" open="(" close=")" separator=",">
            #{item.productNo}
        </foreach>
        and cart_no = #{cartNo}
    </delete>

    <!-- 사용자의 장바구니 상품 총 개수 검색 -->
    <select id="findCountByMemberNo" parameterType="int" resultType="int">
        select count(*) from CART_DETAIL where member_no = #{memberNo}
    </select>

    <!-- 사용자의 장바구니 상품 목록 검색 -->
    <select id="findCartDetailsByMemberNo" resultType="CartDetail">
        select * from CART_DETAIL where member_no = #{memberNo}
    </select>

    <!-- 사용자의 장바구니 중 선택 상품 검색 -->
    <select id="findByMemberNoAndProductNos" parameterType="map" resultType="CartDetail">
        select cd.*
        from CART_DETAIL cd
        join CART c on cd.cart_no = c.cart_no
        where c.member_no = #{memberNo} and cd.product_no in
        <foreach item="item" index="index" collection="productNos" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 사용자의 장바구니 상품 총 가격 검색 -->
    <select id="findTotalPriceByMemberNo" parameterType="int" resultType="int">
        select sum(cart_detail_price) as cart_total_price from CART_DETAIL where member_no = #{memberNo}
    </select>

    <!-- 결제할 상품 정보 불러오기 -->
    <select id="findWithProduct" resultType="ProductOrderDetail">
        SELECT 'http://localhost:8081/api/v1/image/product?name=' || pi.product_image_filename as product_image,
        p.product_no,
        p.product_name,
        cd.cart_detail_count,
        p.product_price * cd.cart_detail_count as cart_total_price
        FROM PRODUCT p
        INNER JOIN PRODUCT_IMAGE pi ON pi.product_no = p.product_no
        INNER JOIN CART_DETAIL cd ON cd.product_no = p.product_no
        INNER JOIN CART c ON c.cart_no = cd.cart_no
        WHERE c.member_no = #{memberNo}
        AND cd.product_no IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
</mapper>