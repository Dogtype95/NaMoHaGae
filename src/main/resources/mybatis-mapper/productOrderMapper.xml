<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kro.namohagae.mall.dao.ProductOrderDao">
    <!-- 주문 상세 저장 -->
    <insert id="save">
        <selectKey keyProperty="productOrderNo" order="BEFORE" resultType="int">
            select product_order_seq_product_order_no.nextval from dual
        </selectKey>
        insert into PRODUCT_ORDER (product_order_no,member_no,product_order_total_price,product_order_date, product_order_address)
        values (#{productOrderNo},#{memberNo},#{productOrderTotalPrice},#{productOrderDate},#{productOrderAddress})
    </insert>

    <resultMap id="readMap" type="kr.kro.namohagae.mall.dto.ProductOrderDto$OrderResult">
        <id column="product_order_no" property="productOrderNo" />
        <result column="product_order_total_price" property="productOrderTotalPrice" />
        <result column="product_order_date" property="productOrderDate" />
        <result column="member_no" property="memberNo" />
        <result column="member_point" property="memberPoint" />
        <result column="product_order_address" property="productOrderAddress" />
        <collection property="orderDetailList" javaType="list" ofType="kr.kro.namohagae.mall.dto.ProductOrderDetailDto$OrderDetailList">
            <result column="product_no" property="productNo" />
            <result column="product_image" property="productImage" />
            <result column="product_name" property="productName" />
            <result column="product_order_detail_no" property="productOrderDetailNo" />
            <result column="product_order_detail_count" property="productOrderDetailCount" />
            <result column="product_order_detail_price" property="productOrderDetailPrice" />
            <result column="product_order_detail_review_enabled" property="productOrderDetailReviewEnabled" />
        </collection>
    </resultMap>

    <!-- 주문 목록 보기 -->
    <select id="list" resultMap="readMap">
        select po.product_order_no, po.product_order_total_price, po.product_order_date, po.member_no, m.member_point,
               po.product_order_address, pod.product_no,
               #{url} || pi.product_image_filename as product_image,
               p.product_name, pod.product_order_detail_no,
               pod.product_order_detail_count, pod.product_order_detail_price, pod.product_order_detail_review_enabled
        from product_order po
            join product_order_detail pod on po.product_order_no = pod.product_order_no
            join member m on po.member_no = m.member_no
            join product p on pod.product_no = p.product_no
            join product_image pi on pod.product_no = pi.product_no and pi.PRODUCT_IMAGE_NO=1
        where po.member_no = #{memberNo} order by po.product_order_date desc
    </select>

    <!-- 주문 상세 보기 -->
    <select id="read" resultMap="readMap">
        select po.product_order_no, po.product_order_total_price, po.product_order_date, po.member_no, m.member_point,
               po.product_order_address, pod.product_no,
               #{url} || pi.product_image_filename as product_image,
               p.product_name, pod.product_order_detail_no,
               pod.product_order_detail_count, pod.product_order_detail_price
        from product_order po
            join product_order_detail pod on po.product_order_no = pod.product_order_no
            join member m on po.member_no = m.member_no
            join product p on pod.product_no = p.product_no
            join product_image pi on pod.product_no = pi.product_no and pi.PRODUCT_IMAGE_NO=1
        where po.product_order_no = #{productOrderNo}
    </select>

    <!-- 주문 완료시 멤버 포인트 지급 -->
    <update id="updateMemberPoint">
        update MEMBER
        set member_point = member_point + #{bonePoint}
        where member_no = #{memberNo}
    </update>
    <select id="myOrderList" resultMap="readMap">
        select * from
            (
                select rownum as rnum, q.* from
                    (
                        select po.product_order_no, po.product_order_total_price, po.product_order_date, po.member_no,
                               po.product_order_address, pod.product_no,
                               #{url} || pi.product_image_filename as product_image,
                               p.product_name, pod.product_order_detail_no,
                               pod.product_order_detail_count, pod.product_order_detail_price, pod.product_order_detail_review_enabled
                        from product_order po
                                 join product_order_detail pod on po.product_order_no = pod.product_order_no
                                 join product p on pod.product_no = p.product_no
                                 join product_image pi on pod.product_no = pi.product_no and pi.PRODUCT_IMAGE_NO=1
                        where po.member_no = #{memberNo} order by po.product_order_date desc
                    ) q
                where rownum&lt;=#{endRowNum}
            )
        where rnum&gt;=#{startRowNum}
    </select>

    <select id="countMe" resultType="Integer">
        select count(*) from product_order where member_no=#{memberNo}
    </select>
</mapper>